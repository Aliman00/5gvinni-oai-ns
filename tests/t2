#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import functools
import os
import re
import sys
import traceback
from ipaddress import IPv4Address, IPv4Interface, IPv6Address, IPv6Interface


def repeat(_func=None, *, num_times=2):
    def decorator_repeat(func):
        @functools.wraps(func)
        def wrapper_repeat(*args, **kwargs):
            for _ in range(num_times):
                value = func(*args, **kwargs)
            return value
        return wrapper_repeat

    if _func is None:
        return decorator_repeat
    else:
        return decorator_repeat(_func)


# ###### Dummy decorator ####################################################
def when(*flags):
    def decorator_when(func):
        @functools.wraps(func)
        def wrapper_when(*args, **kwargs):
            return func(*args, **kwargs)
        return wrapper_when
    return decorator_when

# ###### Dummy decorator ####################################################
def when_not(*flags):
    def decorator_when(func):
        @functools.wraps(func)
        def wrapper_when(*args, **kwargs):
            return func(*args, **kwargs)
        return wrapper_when
    return decorator_when

    #if _func is None:
        #print('n1!')
        #return decorator_when
    #else:
        #print('n2!')
        #return decorator_when(_func)


#@repeat(num_times = 2)
@when('bla')
def test():
   print('Test!')

   try:
      cmd = 'sudo su -c "/root/configurate.sh"'
      #result, _ = charms.sshproxy._run(cmd)
      result, _ = ( '', '' )
   except:
      exc_type, exc_value, exc_traceback = sys.exc_info()
      err = traceback.format_exception(exc_type, exc_value, exc_traceback)
      print('configuration failed:' + str(err))
   else:
      print({'output': result})
   finally:
      print('actions.config')

   b = b'1234567890'

   return None
   # return ( b.decode('utf-8').strip(), b.decode('utf-8').strip() )


x, y = test()
print(x)
print(y)
